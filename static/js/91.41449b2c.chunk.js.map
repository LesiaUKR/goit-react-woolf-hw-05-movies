{"version":3,"file":"static/js/91.41449b2c.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["import React from 'react';\n\nconst Error = ({ error }) => {\n  return <div>'Sorry, something went wrong :('</div>;\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const MovieInfoWrapper = styled.div`\n  padding-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  gap: 30px;\n  color: white;\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 6px;\n  outline: 2px solid rgb(255, 49, 49, 0.5);\n  min-width: 400px;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { ImgWrapper, InfoWrapper, MovieInfoWrapper } from './MovieInfo.styled';\nimport defaultImg from '../../images/default-movie-poster.jpg';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieInfo = ({\n  details: {\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    name,\n    genres = [],\n  },\n}) => {\n  return (\n    <MovieInfoWrapper>\n      <ImgWrapper>\n        <img\n          src={poster_path ? BASE_IMG_URL + poster_path : defaultImg}\n          alt={title || name}\n          style={{ width: '100%', height: '100%' }}\n        />\n      </ImgWrapper>\n      <InfoWrapper>\n        <h2>\n          {title || name}\n          {release_date ? ` (${release_date.slice(0, 4)})` : ''}\n        </h2>\n        <p>\n          User Score: {vote_average ? `${Math.round(vote_average * 10)}%` : '-'}\n        </p>\n        <h3>Overview</h3>\n        <p>{overview || 'no info'}</p>\n        <h3>Genres</h3>\n        {genres && <span>{genres.map(genre => genre.name).join(' | ')}</span>}\n      </InfoWrapper>\n    </MovieInfoWrapper>\n  );\n};\n\nexport default MovieInfo;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AddInfoSection = styled.div`\n  margin: 20px 0px;\n  border-bottom: 1px solid white;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const AddInfoName = styled.h3`\n  display: inline-block;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  transition: all 250ms ease-in-out, color 250ms ease-in-out;\n  &.active {\n    color: red;\n  }\n  &:hover,\n  &:focus {\n    color: red;\n    transform: scale(1.5);\n    cursor: pointer;\n  }\n`;\n\nexport const BackBtn = styled(Link)`\n  display: inline-flex;\n  gap: 4px;\n  align-items: center;\n  padding: 8px 8px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  font-weight: 500;\n  :hover {\n    color: red;\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\n","import MovieInfo from 'components/MovieInfo/MovieInfo';\nimport React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/moviesAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { AddInfoSection, BackBtn, InfoLink } from './MovieDetails.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVE: 'resolve',\n  ERROR: 'error',\n};\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState();\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  // console.log({ movieId });\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setStatus(Status.LOADING);\n    getMovieDetails(movieId)\n      .then(data => {\n        setDetails(data);\n        setStatus(Status.RESOLVE);\n      })\n      .catch(error => {\n        setDetails({});\n        setError(error);\n        setStatus(Status.ERROR);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackBtn to={backLinkRef.current} type=\"button\">\n        <BiArrowBack size=\"1.5em\" />\n        Go back\n      </BackBtn>\n      {details && <MovieInfo details={details} />}\n      {status === Status.LOADING && <Loader />}\n      {status === Status.ERROR && <Error>{error}</Error>}\n      <AddInfoSection>\n        <InfoLink to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n          Cast\n        </InfoLink>\n        <InfoLink to=\"review\" state={{ from: location?.state?.from ?? '/' }}>\n          Reviews\n        </InfoLink>\n      </AddInfoSection>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a661ef86e324b3ea2edd4f22cf9fb615';\n\nexport async function getTrendingMovies() {\n  const URL = `${BASE_URL}trending/all/day?api_key=${API_KEY}`;\n  const response = await axios.get(URL);\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieSearch(query) {     \n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\nexport async function getMovieCredits(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReview(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\n"],"names":["_ref","error","_jsx","children","MovieInfoWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ImgWrapper","_templateObject2","InfoWrapper","_templateObject3","details","title","poster_path","release_date","vote_average","overview","name","genres","_jsxs","src","defaultImg","alt","style","width","height","concat","slice","Math","round","map","genre","join","AddInfoSection","InfoLink","h3","NavLink","BackBtn","Link","_templateObject4","Status","MovieDetails","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","setDetails","useState","status","setStatus","setError","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","then","data","catch","to","current","type","BiArrowBack","size","MovieInfo","Loader","Error","Suspense","fallback","Outlet","BASE_URL","API_KEY","async","getTrendingMovies","URL","axios","get","results","getMovieSearch","query","getMovieCredits","getMovieReview"],"sourceRoot":""}