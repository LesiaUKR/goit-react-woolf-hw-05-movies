{"version":3,"file":"static/js/336.390fd113.chunk.js","mappings":"gLAEA,MAIA,EAJcA,IAAgB,IAAf,MAAEC,GAAOD,EACtB,OAAOE,EAAAA,EAAAA,KAAA,OAAAC,SAAK,oCAAsC,C,uGCGpD,MAAMC,EACE,OADFA,EAEK,UAFLA,EAGK,UAHLA,EAIG,QA8CT,EA5CeC,KACb,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,aAC/BC,EAAQC,IAAaF,EAAAA,EAAAA,UAASJ,IAC9BH,EAAOU,IAAYH,EAAAA,EAAAA,UAAS,OAE7B,QAAEI,IAAYC,EAAAA,EAAAA,KAepB,OAbAC,EAAAA,EAAAA,YAAU,KACRJ,EAAUN,IACVW,EAAAA,EAAAA,IAAeH,GACZI,MAAKC,IACJV,EAAeU,EAAKC,SACpBR,EAAUN,EAAe,IAE1Be,OAAMlB,IACLM,EAAe,CAAC,GAChBI,EAASV,GACTS,EAAUN,EAAa,GACvB,GACH,CAACQ,KAEFQ,EAAAA,EAAAA,MAAA,WAAAjB,SAAA,CACGM,IAAWL,GAAkBE,GAAeA,EAAYe,OAAS,GAChEnB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGG,EAAYgB,KAAItB,IAAA,IAAC,GAAEuB,EAAE,OAAEC,EAAM,QAAEC,GAASzB,EAAA,OACvCoB,EAAAA,EAAAA,MAAA,MAAAjB,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKqB,KACLtB,EAAAA,EAAAA,KAAA,KAAAC,SAAIsB,MAFGF,EAGJ,QAKXd,IAAWL,IACTF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oDAGNM,IAAWL,IAAkBF,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,IACpCjB,IAAWL,IAAgBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAAAxB,SAAEF,MAC5B,C,mFClDd2B,EAAAA,EAAMC,SAASC,QAAU,gCACzB,MAAMC,EAAU,mCAETC,eAAeC,IAMpB,aALuBL,EAAAA,EAAMM,IAAI,mBAAoB,CACnDC,OAAQ,CACNC,QAASL,MAGGd,KAAKC,OACvB,CAEOc,eAAeK,EAAgBzB,GAMpC,aALuBgB,EAAAA,EAAMM,IAAI,SAADI,OAAU1B,GAAW,CACnDuB,OAAQ,CACNC,QAASL,MAGGd,IAClB,CAEOe,eAAeO,EAAeC,GAOnC,aANuBZ,EAAAA,EAAMM,IAAI,eAAgB,CAC/CC,OAAQ,CACNC,QAASL,EACTS,MAAOA,MAGKvB,KAAKC,OACvB,CACOc,eAAeS,EAAgB7B,GAOpC,aANuBgB,EAAAA,EAAMM,IAAI,SAADI,OAAU1B,EAAO,YAAY,CAC3DuB,OAAQ,CACNC,QAASL,EACTW,SAAU,YAGEzB,IAClB,CAEOe,eAAejB,EAAeH,GAMnC,aALuBgB,EAAAA,EAAMM,IAAI,SAADI,OAAU1B,EAAO,YAAY,CAC3DuB,OAAQ,CACNC,QAASL,MAGGd,IAClB,C","sources":["components/Error/Error.jsx","components/Review/Review.jsx","services/moviesAPI.js"],"sourcesContent":["import React from 'react';\n\nconst Error = ({ error }) => {\n  return <div>'Sorry, something went wrong :('</div>;\n};\n\nexport default Error;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReview } from '../../services/moviesAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\n\nconst Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVE: 'resolve',\n  ERROR: 'error',\n};\nconst Review = () => {\n  const [movieReview, setMovieReview] = useState();\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(Status.LOADING);\n    getMovieReview(movieId)\n      .then(data => {\n        setMovieReview(data.results);\n        setStatus(Status.RESOLVE);\n      })\n      .catch(error => {\n        setMovieReview({});\n        setError(error);\n        setStatus(Status.ERROR);\n      });\n  }, [movieId]);\n  return (\n    <section>\n      {status === Status.RESOLVE && movieReview && movieReview.length > 0 ? (\n        <div>\n          <ul>\n            {movieReview.map(({ id, author, content }) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        status !== Status.LOADING && (\n          <p>Sorry, there isn't any review for this movie :(</p>\n        )\n      )}\n      {status === Status.LOADING && <Loader />}\n      {status === Status.ERROR && <Error>{error}</Error>}\n    </section>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a661ef86e324b3ea2edd4f22cf9fb615';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('trending/all/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function getMovieSearch(query) {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data.results;\n}\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n}\n\nexport async function getMovieReview(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n"],"names":["_ref","error","_jsx","children","Status","Review","movieReview","setMovieReview","useState","status","setStatus","setError","movieId","useParams","useEffect","getMovieReview","then","data","results","catch","_jsxs","length","map","id","author","content","Loader","Error","axios","defaults","baseURL","API_KEY","async","getTrendingMovies","get","params","api_key","getMovieDetails","concat","getMovieSearch","query","getMovieCredits","language"],"sourceRoot":""}