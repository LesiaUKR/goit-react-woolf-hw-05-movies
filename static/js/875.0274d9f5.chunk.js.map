{"version":3,"file":"static/js/875.0274d9f5.chunk.js","mappings":"8PAEaA,EAAYC,EAAAA,GAAAA,GAAH,yRAYTC,EAAYD,EAAAA,GAAAA,GAAH,gZAcTE,EAAaF,EAAAA,GAAAA,IAAH,4IASVG,EAAcH,EAAAA,GAAAA,IAAH,mFAMXI,EAAaJ,EAAAA,GAAAA,GAAH,oHAOVK,EAAcL,EAAAA,GAAAA,IAAH,gG,SCKxB,MAzCA,YAAiC,IAAXM,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KACN,gBACEC,EADF,EACEA,GACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,YACAC,EALF,EAKEA,eACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,aAPF,OASE,SAAC,KAAD,CAAeC,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMZ,GAAnD,UACE,UAACN,EAAD,YACE,SAACC,EAAD,WACE,SAACG,EAAD,CACEe,IAAKP,EArBF,kCAqB+BA,EAAcQ,EAChDC,IAAKX,GAASC,OAGlB,UAACT,EAAD,YACE,UAACC,EAAD,WACGU,GAAkBH,GAASC,EAC3BI,EAAY,YAAQA,EAAaO,MAAM,EAAG,GAA9B,KAAsC,OAErD,oCACW,IACRR,EAAY,UAAMS,KAAKC,MAAqB,GAAfV,GAAjB,KAAyC,cAfnDL,EATb,KAiCP,C,yHCnDYgB,E,QAAgB1B,GAAAA,GAAH,gD,SCiB1B,EAfiB,WACf,OAA4B2B,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKH,EAC1B,GAAE,KAGD,gCACE,SAACF,EAAD,8BACA,SAACM,EAAA,EAAD,CAAY1B,OAAQA,MAGzB,C,iMCfK2B,EAAW,gCACXC,EAAU,mCAET,SAAeJ,IAAtB,4CAAO,OAAP,oBAAO,6FACCK,EADD,UACUF,EADV,oCAC8CC,GAD9C,SAEkBE,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,KAAKC,SAHhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDQ,EADC,oBACkBP,IAFpC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BS,IAFjD,cACCN,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDQ,EADC,4BAC0BP,EAD1B,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BJ,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDQ,EADC,4BAC0BP,IAF5C,cACCG,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Homepage/Homepage.styled.js","pages/Homepage/Homepage.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 100px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const MovieItem = styled.li`\n  border-radius: 6px;\n  outline: 2px solid rgb(255, 49, 49, 0.5);\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    box-shadow 250ms ease-in-out, transform 250ms ease-in-out;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: 2px solid white;\n    box-shadow: 2px 2px 6px 2px rgb(255, 49, 49, 0.7);\n    transform: scale(1.03);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 10px;\n  justify-content: center;\n  align-items: center;\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  font-size: 18px;\n  padding: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 18px;\n  padding-top: 10px 10px;\n  overflow: hidden;\n  margin-bottom: 10px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultImg from '../../images/default-movie-poster.jpg';\nimport {\n  ImgWrapper,\n  InfoWrapper,\n  MovieItem,\n  MovieList,\n  MoviePoster,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(\n        ({\n          id,\n          title,\n          name,\n          poster_path,\n          original_title,\n          vote_average,\n          release_date,\n        }) => (\n          <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <MovieItem>\n              <ImgWrapper>\n                <MoviePoster\n                  src={poster_path ? BASE_IMG_URL + poster_path : defaultImg}\n                  alt={title || name}\n                />\n              </ImgWrapper>\n              <InfoWrapper>\n                <MovieTitle>\n                  {original_title || title || name}\n                  {release_date ? ` (${release_date.slice(0, 4)})` : ''}\n                </MovieTitle>\n                <p>\n                  Raiting:{' '}\n                  {vote_average ? `${Math.round(vote_average * 10)}%` : '-'}\n                </p>\n              </InfoWrapper>\n            </MovieItem>\n          </Link>\n        )\n      )}\n    </MovieList>\n  );\n}\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const MovieListName = styled.h1`\n  margin-bottom: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../../services/moviesAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { MovieListName } from './Homepage.styled';\nconst Homepage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <section>\n      <MovieListName>Trending today</MovieListName>\n      <MoviesList movies={movies} />\n    </section>\n  );\n};\n\nexport default Homepage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a661ef86e324b3ea2edd4f22cf9fb615';\n\nexport async function getTrendingMovies() {\n  const URL = `${BASE_URL}trending/all/day?api_key=${API_KEY}`;\n  const response = await axios.get(URL);\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieSearch(query) {     \n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\nexport async function getMovieCredits(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReview(movieId) {     \n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\n"],"names":["MovieList","styled","MovieItem","ImgWrapper","InfoWrapper","MovieTitle","MoviePoster","movies","location","useLocation","map","id","title","name","poster_path","original_title","vote_average","release_date","to","state","from","src","defaultImg","alt","slice","Math","round","MovieListName","useState","setMovies","useEffect","getTrendingMovies","then","MoviesList","BASE_URL","API_KEY","URL","axios","response","data","results","getMovieDetails","movieId","getMovieSearch","query","getMovieCredits","getMovieReview"],"sourceRoot":""}